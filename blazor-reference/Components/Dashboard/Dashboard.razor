@page "/dashboard"
@using MudBlazor
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IProductService ProductService
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h4" Class="mb-2">
                Welcome back, @firstName!
            </MudText>
            <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-6">
                Here's what's happening with your store today.
            </MudText>
        </MudItem>

        <!-- Stats Cards -->
        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudGrid AlignItems="Center.Center">
                        <MudItem>
                            <MudAvatar Color="Color.Primary" Size="Size.Large">
                                <MudIcon Icon="@Icons.Material.Filled.Inventory" />
                            </MudAvatar>
                        </MudItem>
                        <MudItem Style="flex: 1;">
                            <MudText Typo="Typo.body2" Color="Color.Secondary">Total Products</MudText>
                            <MudText Typo="Typo.h5">@stats.TotalProducts</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Success">
                                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Size="Size.Small" />
                                +12%
                            </MudText>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudGrid AlignItems="Center.Center">
                        <MudItem>
                            <MudAvatar Color="Color.Success" Size="Size.Large">
                                <MudIcon Icon="@Icons.Material.Filled.CheckCircle" />
                            </MudAvatar>
                        </MudItem>
                        <MudItem Style="flex: 1;">
                            <MudText Typo="Typo.body2" Color="Color.Secondary">Active Listings</MudText>
                            <MudText Typo="Typo.h5">@stats.ActiveListings</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Success">
                                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Size="Size.Small" />
                                +8%
                            </MudText>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudGrid AlignItems="Center.Center">
                        <MudItem>
                            <MudAvatar Color="Color.Secondary" Size="Size.Large">
                                <MudIcon Icon="@Icons.Material.Filled.AttachMoney" />
                            </MudAvatar>
                        </MudItem>
                        <MudItem Style="flex: 1;">
                            <MudText Typo="Typo.body2" Color="Color.Secondary">Total Revenue</MudText>
                            <MudText Typo="Typo.h5">$@stats.TotalRevenue.ToString("N0")</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Success">
                                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Size="Size.Small" />
                                +23%
                            </MudText>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudGrid AlignItems="Center.Center">
                        <MudItem>
                            <MudAvatar Color="Color.Warning" Size="Size.Large">
                                <MudIcon Icon="@Icons.Material.Filled.ShoppingCart" />
                            </MudAvatar>
                        </MudItem>
                        <MudItem Style="flex: 1;">
                            <MudText Typo="Typo.body2" Color="Color.Secondary">Pending Orders</MudText>
                            <MudText Typo="Typo.h5">@stats.PendingOrders</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Error">
                                <MudIcon Icon="@Icons.Material.Filled.TrendingDown" Size="Size.Small" />
                                -5%
                            </MudText>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Walmart Connection -->
        <MudItem xs="12" lg="8">
            <WalmartConnection />
        </MudItem>

        <!-- Recent Activity -->
        <MudItem xs="12" lg="4">
            <MudPaper Class="pa-6" Style="height: 100%;">
                <MudText Typo="Typo.h6" Class="mb-4">Recent Activity</MudText>
                <MudTimeline>
                    @foreach (var activity in recentActivity)
                    {
                        <MudTimelineItem Color="@GetActivityColor(activity.Status)" Size="Size.Small">
                            <ItemContent>
                                <MudText Typo="Typo.body2">@activity.Message</MudText>
                                <MudText Typo="Typo.caption" Color="Color.Secondary">@activity.Time</MudText>
                            </ItemContent>
                        </MudTimelineItem>
                    }
                </MudTimeline>
            </MudPaper>
        </MudItem>

        <!-- Quick Actions -->
        <MudItem xs="12">
            <MudPaper Class="pa-6">
                <MudText Typo="Typo.h6" Class="mb-4">Quick Actions</MudText>
                <MudGrid>
                    <MudItem xs="12" sm="6" md="3">
                        <MudButton Variant="Variant.Outlined" 
                                  Color="Color.Primary" 
                                  FullWidth="true" 
                                  Size="Size.Large"
                                  StartIcon="@Icons.Material.Filled.Add"
                                  Class="pa-4"
                                  Style="height: 120px; flex-direction: column;">
                            <MudText Typo="Typo.subtitle1">Add Product</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Secondary">Create a new product listing</MudText>
                        </MudButton>
                    </MudItem>

                    <MudItem xs="12" sm="6" md="3">
                        <MudButton Variant="Variant.Outlined" 
                                  Color="Color.Success" 
                                  FullWidth="true" 
                                  Size="Size.Large"
                                  StartIcon="@Icons.Material.Filled.ShoppingCart"
                                  Class="pa-4"
                                  Style="height: 120px; flex-direction: column;">
                            <MudText Typo="Typo.subtitle1">View Orders</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Secondary">Check recent orders</MudText>
                        </MudButton>
                    </MudItem>

                    <MudItem xs="12" sm="6" md="3">
                        <MudButton Variant="Variant.Outlined" 
                                  Color="Color.Secondary" 
                                  FullWidth="true" 
                                  Size="Size.Large"
                                  StartIcon="@Icons.Material.Filled.TrendingUp"
                                  Class="pa-4"
                                  Style="height: 120px; flex-direction: column;">
                            <MudText Typo="Typo.subtitle1">Analytics</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Secondary">View performance metrics</MudText>
                        </MudButton>
                    </MudItem>

                    <MudItem xs="12" sm="6" md="3">
                        <MudButton Variant="Variant.Outlined" 
                                  Color="Color.Warning" 
                                  FullWidth="true" 
                                  Size="Size.Large"
                                  StartIcon="@Icons.Material.Filled.Help"
                                  Class="pa-4"
                                  Style="height: 120px; flex-direction: column;">
                            <MudText Typo="Typo.subtitle1">Support</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Secondary">Get help and support</MudText>
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private string firstName = "Seller";
    private DashboardStats stats = new();
    private List<ActivityItem> recentActivity = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadUserInfo();
        await LoadStats();
        LoadRecentActivity();
    }

    private async Task LoadUserInfo()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        
        if (user.Identity?.IsAuthenticated == true)
        {
            firstName = user.FindFirst(ClaimTypes.GivenName)?.Value ?? 
                       user.FindFirst(ClaimTypes.Name)?.Value ?? 
                       "Seller";
        }
    }

    private async Task LoadStats()
    {
        try
        {
            // Mock data - in real app, fetch from services
            stats = new DashboardStats
            {
                TotalProducts = 156,
                ActiveListings = 142,
                TotalRevenue = 45678.90m,
                PendingOrders = 23
            };
        }
        catch (Exception ex)
        {
            Snackbar.Add("Error loading dashboard stats", Severity.Error);
        }
    }

    private void LoadRecentActivity()
    {
        recentActivity = new List<ActivityItem>
        {
            new() { Message = "New order received for SKU-001", Time = "2 minutes ago", Status = "success" },
            new() { Message = "Low inventory alert for SKU-045", Time = "15 minutes ago", Status = "warning" },
            new() { Message = "Product listing approved for SKU-123", Time = "1 hour ago", Status = "success" },
            new() { Message = "Failed to sync inventory for SKU-089", Time = "2 hours ago", Status = "error" }
        };
    }

    private Color GetActivityColor(string status)
    {
        return status switch
        {
            "success" => Color.Success,
            "warning" => Color.Warning,
            "error" => Color.Error,
            _ => Color.Default
        };
    }

    public class DashboardStats
    {
        public int TotalProducts { get; set; }
        public int ActiveListings { get; set; }
        public decimal TotalRevenue { get; set; }
        public int PendingOrders { get; set; }
    }

    public class ActivityItem
    {
        public string Message { get; set; } = string.Empty;
        public string Time { get; set; } = string.Empty;
        public string Status { get; set; } = string.Empty;
    }
}