@page "/forgot-password"
@using Microsoft.AspNetCore.Identity
@using MudBlazor
@inject UserManager<IdentityUser> UserManager
@inject IEmailSender EmailSender
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
    <MudPaper Elevation="4" Class="pa-8">
        <MudGrid Justify="Justify.Center" Class="mb-4">
            <MudIcon Icon="@Icons.Material.Filled.Store" Size="Size.Large" Color="Color.Primary" />
        </MudGrid>
        
        <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-2">Reset your password</MudText>
        <MudText Typo="Typo.body2" Align="Align.Center" Color="Color.Secondary" Class="mb-6">
            Enter your email address and we'll send you a link to reset your password
        </MudText>

        <EditForm Model="forgotPasswordModel" OnValidSubmit="HandleForgotPassword">
            <DataAnnotationsValidator />
            
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <MudAlert Severity="Severity.Error" Class="mb-4">@errorMessage</MudAlert>
            }

            @if (!string.IsNullOrEmpty(successMessage))
            {
                <MudAlert Severity="Severity.Success" Class="mb-4">@successMessage</MudAlert>
            }

            <MudTextField @bind-Value="forgotPasswordModel.Email"
                         Label="Email address"
                         Variant="Variant.Outlined"
                         InputType="InputType.Email"
                         Required="true"
                         FullWidth="true"
                         Class="mb-4"
                         Adornment="Adornment.Start"
                         AdornmentIcon="@Icons.Material.Filled.Email" />

            <MudButton ButtonType="ButtonType.Submit"
                      Variant="Variant.Filled"
                      Color="Color.Primary"
                      FullWidth="true"
                      Size="Size.Large"
                      Class="mb-4"
                      Disabled="isLoading">
                @if (isLoading)
                {
                    <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                    <text>Sending...</text>
                }
                else
                {
                    <text>Send reset link</text>
                }
            </MudButton>

            <MudGrid Justify="Justify.Center">
                <MudButton Href="/login" 
                          Variant="Variant.Text" 
                          Color="Color.Primary"
                          StartIcon="@Icons.Material.Filled.ArrowBack">
                    Back to sign in
                </MudButton>
            </MudGrid>
        </EditForm>
    </MudPaper>
</MudContainer>

@code {
    private ForgotPasswordModel forgotPasswordModel = new();
    private bool isLoading = false;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;

    public class ForgotPasswordModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = string.Empty;
    }

    private async Task HandleForgotPassword()
    {
        isLoading = true;
        errorMessage = string.Empty;
        successMessage = string.Empty;

        try
        {
            var user = await UserManager.FindByEmailAsync(forgotPasswordModel.Email);
            
            if (user != null)
            {
                var token = await UserManager.GeneratePasswordResetTokenAsync(user);
                var resetLink = Navigation.ToAbsoluteUri($"/reset-password?token={Uri.EscapeDataString(token)}&email={Uri.EscapeDataString(user.Email)}");
                
                // Send email with reset link
                await EmailSender.SendEmailAsync(
                    user.Email, 
                    "Reset Your Password", 
                    $"Please reset your password by clicking <a href='{resetLink}'>here</a>.");
            }

            // Always show success message for security
            successMessage = "Check your email for password reset instructions.";
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred while sending the reset email.";
            // Log exception
        }
        finally
        {
            isLoading = false;
        }
    }
}